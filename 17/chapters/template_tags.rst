.. _template-tag-chapter:

Теги шаблонов
=============

Выдаем список категорий на каждой странице
------------------------------------------
Хотелось бы иметь возможность показывать различные категории, которые пользователь может просматривать в боковой панели на каждой странице. С учетом того, что мы изучили, можно было бы поступить следующим образом:

* В шаблоне ``base.html`` добавить код, отображающий список категорий, если он был передан ему.
* Затем в каждом представлении мы могли обращаться к объекту Category, получать все категории и передавать их в словарь контекста.

Но это довольно примитивное решение, требующее большого числа операций вырезания и вставки кода. Кроме того, возникнет проблема с отображением категорий на страницах, обслуживаемых пакетом django-registration-redux. Из-за этого необходим другой подход, использующий ``теги шаблонов``, которые добавляются в шаблон и запрашивают необходимые данные.

Использование тегов шаблонов
----------------------------
Создайте каталог ``rango/templatetags``, а в нем два файла - один назовите ``__init__.py`` и оставьте его пустым, а второй - ``rango_extras.py``, в который добавьте следующий код:

.. code-block:: python

	from django import template
	from rango.models import Category

	register = template.Library()

	@register.inclusion_tag('rango/cats.html')
	def get_category_list():
	    return {'cats': Category.objects.all()}


Как видите, мы создали метод под названием ``get_category_list()``, который возвращает список категорий, и связали его с шаблоном ``rango/cats.html``. Теперь создайте шаблон ``rango/cats.html`` в каталоге с шаблонами и вставьте в него следующий код:

.. code-block:: html

	{% if cats %}
	    <ul class="nav nav-sidebar">
	    {% for c in cats %}
	        <li><a href="{% url 'category'  c.slug %}">{{ c.name }}</a></li>
	    {% endfor %}

	{% else %}
	    <li> <strong >There are no category present.</strong></li>

	    </ul>
	{% endif %}

Теперь в Вашем базовом шаблоне ``base.html`` можно обратиться к созданному тегу шаблона, сначала загрузив его с помощью команды ``{% load rango_extras %}``, а затем разместив его на странице в виде ``{% get_category_list %}``, т. е.:

.. code-block:: html

    <div class="col-sm-3 col-md-2 sidebar">
        
        {% block side_block %}
        {% get_category_list %}
        {% endblock %}

    </div>
	
	
.. note:: Вам нужно будет перезапускать Ваш сервер для разработок каждый раз при модификации тегов шаблонов, чтобы изменения вступили в силу.

Теги шаблонов с параметрами
---------------------------
Теперь давайте расширим функциональные возможности нашего тега так, чтобы при переходе на страницу с категорией, он подсвечивал категорию, в которой мы находимся в данный момент. Для этого необходимо передать аргументы в тег шаблона. Таким образом, отредактируйте метод в файле ``rango_extras.py`` следующим образом:

.. code-block:: python

	def get_category_list(cat=None):
	    return {'cats': Category.objects.all(), 'act_cat': cat}
		

Это позволит передать методу категорию, в которой мы находимся в данной момент. Теперь можно изменить шаблон ``base.html``, передавая в тег категорию, если она существует.

.. code-block:: html

    <div class="col-sm-3 col-md-2 sidebar">
        
        {% block side_block %}
        {% get_category_list category %}
        {% endblock %}

    </div>
	
Теперь обновите шаблон ``cats.html``:

.. code-block:: html

    {% for c in cats %}
    	{% if c == act_cat %} <li  class="active" > {% else  %} <li>{% endif %}
        	<a href="{% url 'category'  c.slug %}">{{ c.name }}</a></li>
    {% endfor %}

В нём мы проверяем совпадает ли категория, выводимая на экран, с категорией (т. е., ``act_cat``), которая была передана методу; если да, то мы присваиваем ей класс ``active``, определенный в Bootstrap (http://getbootstrap.com/components/#nav).

Перезапустите сервер для разработок и посетите страницы. При каждом посещении страницы мы пытаемся получить доступ к переменной ``category``. Когда Вы просматриваете страницу категории, шаблон имеет доступ к переменной ``category``, значение которой передает тегу шаблона ``get_category_list()``. Оно затем используется в шаблоне ``cats.html`` для подсветки активной категории.



